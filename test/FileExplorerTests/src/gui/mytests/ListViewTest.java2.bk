package gui.mytests;

import java.awt.Component;
import javax.swing.*;
import java.io.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class ListViewTest extends javax.swing.JFrame {

	/**
	 * Creates new form ListViewTest
	 */
	public ListViewTest() {
		initComponents();
		iconRegistry = SystemResources.IconRegistry.getIconRegistry();
		tableModel = (DefaultTableModel) jTable2.getModel();
		jTable2.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
	}
	
	class ImageRenderer extends DefaultTableCellRenderer {
	  JLabel lbl = new JLabel();

	  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
	      boolean hasFocus, int row, int column) {
	    // lbl.setText((String) value);
		lbl.setIcon((Icon)value);
	    return lbl;
	  }
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
//	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jToolBar2 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jTextField3 = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jLabel2 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jDialog1.setTitle("About");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jButton1.setText("up");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton2.setText("reload");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton2);

        jButton3.setText("back");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton3);

        jButton4.setText("fwd");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton4);
        jToolBar2.add(jSeparator3);

        jTextField3.setPreferredSize(new java.awt.Dimension(100, 28));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jToolBar2.add(jTextField3);
        jToolBar2.add(jSeparator4);

        jLabel2.setText("search.icn");
        jToolBar2.add(jLabel2);

        jTextField4.setMaximumSize(new java.awt.Dimension(80, 28));
        jTextField4.setMinimumSize(new java.awt.Dimension(80, 28));
        jTextField4.setPreferredSize(new java.awt.Dimension(80, 28));
        jToolBar2.add(jTextField4);

        getContentPane().add(jToolBar2, java.awt.BorderLayout.NORTH);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Quick access");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Drives");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("a");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("b");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Library");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Home");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Trash Bin");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Bookmarks");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Remote servers");
        treeNode1.add(treeNode2);
        jTree2.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane3.setViewportView(jTree2);

        jSplitPane1.setLeftComponent(jScrollPane3);

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Name", "Path", "Type", "Modified", "Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(20);
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable2.setShowHorizontalLines(false);
        jTable2.setShowVerticalLines(false);
        jScrollPane4.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(20);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(20);
        }

        jSplitPane1.setRightComponent(jScrollPane4);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private SystemResources.IconRegistry iconRegistry = null;
	private DefaultTableModel tableModel = null;
	
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		setTableRow(new File("a/b/google.png"));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        
    }//GEN-LAST:event_formComponentResized


	public static void main(String args[]) {
		/* Set the Windows look and feel */
		try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
		} catch (Exception e) {
			System.err.println("Cannot set L&F to Nimbus: " + e);
		}
        

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				ListViewTest frame = new ListViewTest();
				frame.setVisible(true);
//                javax.swing.SwingUtilities.updateComponentTreeUI(frame.getContentPane());
			}
		});
	}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables

	private String getFileType(final File file) {
		if(file.isDirectory()) 
			return "folder";
		else {
			int dotIdx = file.getPath().lastIndexOf('.');
			if(dotIdx == -1) 
				return "file";
			else 
				return file.getPath().substring(dotIdx+1).toLowerCase();
		}	
	}
	
	final double KB = Math.pow(1024.0, 1.0);
	final double MB = Math.pow(1024.0, 2.0);
	final double GB = Math.pow(1024.0, 3.0);
	
	private String getFileSize(final long size) {
		final double s = (double)size;
		if(s < KB)          return String.format("%d B", size);
		else if(s < MB)     return String.format("%.2f K", s/KB);
		else if(s < GB)     return String.format("%.2f M", s/MB);
		else                return String.format("%.2f G", s/GB);
	}
	
	private String getFileModTime(final long time) {
		return String.format("%tY/%<tm/%<td %<tI:%<tM:%<tS %<Tp", time);
	}
	
	private void setTableRow(final File file) {
		// "Icon", "Name", "Path", "Type", "Modified", "Size"		
		tableModel.addRow(new Object[] {
			iconRegistry.get(file), // file icon
			file.getName(), // file name
			file, // file path: as data type kept as Object to store File object for future use
			getFileType(file), // file type 
			getFileModTime(file.lastModified()), // modified date & time
			getFileSize(file.length())
		});
	}
}
